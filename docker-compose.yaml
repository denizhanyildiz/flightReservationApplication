version: "3.8"
services:
  flight-reservation:
    restart: on-failure
    container_name: flight-reservation-service
    build:
      context: .
      dockerfile: dockerfile-flight-reservation-service
    ports:
      - "8080:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/booking_db?createDatabaseIfNotExist=true
      spring.datasource.username: booking
      spring.datasource.password: booking
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      spring.sql.init.mode: always
      spring.sql.init.schema-locations: classpath:db/schema.sql
    depends_on:
      - postgresql
    networks:
      - flight-application-network

  postgresql:
    image: postgres:latest
    restart: on-failure
    container_name: flight-application-postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flightReservation
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - flight-application-network

networks:
  flight-application-network:

volumes:
  postgres-data:
    driver: local